# -*- mode: python ; coding: utf-8 -*-

a = Analysis(
    ['paint/PaintApp.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('common', 'common'),
        ('paint/paint_configs', 'paint_configs'),
    ],
    hiddenimports=[
        'common.isAdmin',
        'paint_ui',
        'paint_business', 
        'paint_worker',
        'image_detector',
        'image_processor',
        'screen_cropper',
        'click_utils',
        'config_manager',
        'pixel_overlay',
        'PyQt5.QtCore',
        'PyQt5.QtWidgets',
        'PyQt5.QtGui',
        'cv2',
        'numpy',
        'PIL',
        'keyboard',  # 确保包含keyboard库
        'pyautogui',
        'paddleocr',
        'easyocr',
        'torch',
        'torchvision',
        'sklearn',
        'sklearn._cyutility',
        'sklearn.utils._cyutility',
        'sklearn.utils._isfinite',
        'sklearn.utils._param_validation',
        'sklearn.utils._chunking',
        'sklearn.utils.validation',
        'sklearn.base',
        'sklearn.utils',
        'sklearn.neighbors',
        'sklearn.cluster',
        'sklearn.metrics',
        'sklearn.preprocessing',
        'sklearn.decomposition',
        'sklearn.ensemble',
        'sklearn.linear_model',
        'sklearn.svm',
        'sklearn.tree',
        'sklearn.model_selection',
        'sklearn.feature_extraction',
        'sklearn.datasets',
        'sklearn.externals',
        'sklearn.exceptions',
        'sklearn._build_utils',
        'sklearn._config',
        'sklearn._distributor_init',
        'sklearn._isotonic',
        'sklearn._lib',
        'sklearn._loss',
        'sklearn._min_dependencies',
        'sklearn._openmp_helpers',
        'sklearn._param_validation',
        'sklearn._random',
        'sklearn._testing',
        'sklearn._typing',
        'sklearn._utils',
        'sklearn.calibration',
        'sklearn.compose',
        'sklearn.covariance',
        'sklearn.cross_decomposition',
        'sklearn.discriminant_analysis',
        'sklearn.dummy',
        'sklearn.feature_selection',
        'sklearn.gaussian_process',
        'sklearn.impute',
        'sklearn.inspection',
        'sklearn.isotonic',
        'sklearn.kernel_approximation',
        'sklearn.kernel_ridge',
        'sklearn.manifold',
        'sklearn.mixture',
        'sklearn.multiclass',
        'sklearn.multioutput',
        'sklearn.naive_bayes',
        'sklearn.neural_network',
        'sklearn.pipeline',
        'sklearn.random_projection',
        'sklearn.semi_supervised',
        'sklearn.tree._criterion',
        'sklearn.tree._splitter',
        'sklearn.tree._tree',
        'sklearn.tree._utils',
        'sklearn.utils._array_api',
        'sklearn.utils._arpack',
        'sklearn.utils._bunch',
        'sklearn.utils._chunking',
        'sklearn.utils._encode',
        'sklearn.utils._fast_dict',
        'sklearn.utils._heap',
        'sklearn.utils._isfinite',
        'sklearn.utils._mask',
        'sklearn.utils._mocking',
        'sklearn.utils._openmp_helpers',
        'sklearn.utils._param_validation',
        'sklearn.utils._pprint',
        'sklearn.utils._random',
        'sklearn.utils._response',
        'sklearn.utils._seq_dataset',
        'sklearn.utils._set_output',
        'sklearn.utils._show_versions',
        'sklearn.utils._tags',
        'sklearn.utils._testing',
        'sklearn.utils._weight_vector',
        'sklearn.utils.arrayfuncs',
        'sklearn.utils.class_weight',
        'sklearn.utils.deprecation',
        'sklearn.utils.discovery',
        'sklearn.utils.estimator_checks',
        'sklearn.utils.extmath',
        'sklearn.utils.fixes',
        'sklearn.utils.graph',
        'sklearn.utils.murmurhash',
        'sklearn.utils.multiclass',
        'sklearn.utils.optimize',
        'sklearn.utils.parallel',
        'sklearn.utils.random',
        'sklearn.utils.sparsefuncs',
        'sklearn.utils.sparsefuncs_fast',
        'sklearn.utils.stats',
        'sklearn.utils.validation'
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    noarchive=False,
    optimize=0,
)

pyz = PYZ(a.pure)

exe = EXE(
    pyz,
    a.scripts,
    [],
    exclude_binaries=True,
    name='PaintApp_Fixed',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    console=False,  # 改为True以便查看错误信息
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon=None,
)

coll = COLLECT(
    exe,
    a.binaries,
    a.datas,
    strip=False,
    upx=True,
    upx_exclude=[],
    name='PaintApp',
)
